{"version":3,"sources":["components/ButtonRandom.js","components/Quote.js","components/AuthorQuotes.js","components/App.js","index.js"],"names":["ButtonRandom","getQuote","className","onClick","Quote","quote","autor","genre","authorClickHandler","AuthorQuotes","arrayAuthorQuote","map","item","i","App","useState","setQuote","setAutor","setGenre","setArrayAuthorQuote","isAuthorQuote","setIsAuthorQuote","randomPage","Math","floor","random","fetch","then","rep","json","data","dataQuotes","length","randomNum","quoteText","quoteAuthor","quoteGenre","catch","error","console","useEffect","quoteRender","array","newArray","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAceA,EAXM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,qBAAKC,UAAU,wBAAf,SACE,yBAAQA,UAAU,6BAA6BC,QAAS,kBAAMF,KAA9D,mBAEE,cAAC,IAAD,UCUOG,EAhBD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpC,OACE,sBAAKN,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,QAAf,SAAwBG,MAE1B,qBAAKH,UAAU,OAAf,SACE,yBAAQA,UAAU,YAAYC,QAAS,kBAAMK,KAA7C,UACE,qBAAKN,UAAU,QAAf,SAAwBI,IACxB,qBAAKJ,UAAU,QAAf,SAAwBK,aCMnBE,EAfM,SAAC,GAAiC,IAA/BH,EAA8B,EAA9BA,MAAOI,EAAuB,EAAvBA,iBAC7B,OACE,sBAAKR,UAAU,wBAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBI,IACxBI,EAAiBC,KAAI,SAACC,EAAMC,GAC3B,OACE,qBAAKX,UAAU,eAAf,SACGU,GADgCC,UCgE9BC,MAnEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEaD,mBAAS,IAFtB,mBAENT,EAFM,KAECW,EAFD,OAGaF,mBAAS,IAHtB,mBAGNR,EAHM,KAGCW,EAHD,OAImCH,mBAAS,IAJ5C,mBAINL,EAJM,KAIYS,EAJZ,OAK6BJ,oBAAS,GALtC,mBAKNK,EALM,KAKSC,EALT,KAOPpB,EAAW,WACf,IACIqB,EAAaC,KAAKC,MAAsB,KAAhBD,KAAKE,UAEjCC,MAAM,GAAD,OAHQ,mDAGR,iBAAiBJ,EAAjB,cACFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAaD,EAAKA,KAAKE,OAEvBC,EAAYV,KAAKC,MAAMD,KAAKE,SAAWM,GAE3Cf,EAASc,EAAKA,KAAKG,GAAWC,WAC9BjB,EAASa,EAAKA,KAAKG,GAAWE,aAC9BjB,EAASY,EAAKA,KAAKG,GAAWG,YAC9Bf,GAAiB,MAElBgB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAM,QAASA,OAG7CE,qBAAU,WACRvC,MACC,IAEH,IAkBMwC,EAAcrB,EAClB,cAAC,EAAD,CAAcd,MAAOA,EAAOI,iBAAkBA,IAE9C,cAAC,EAAD,CACEL,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,mBAzBuB,WAGzBkB,MAAM,GAAD,OAFK,mDAEL,mBAAkBpB,EAAlB,aACFqB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IADc,EACRY,EAAQZ,EAAKA,KACba,EAAW,GAFH,cAGGD,GAHH,IAGd,2BAAwB,CAAC,IAAhB9B,EAAe,QACtB+B,EAASC,KAAKhC,EAAKsB,YAJP,8BAOdf,EAAoBwB,GACpBtB,GAAiB,MAElBgB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAM,QAASA,SAc7C,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CAAcD,SAAUA,IACvBwC,MC9DPI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92ab92f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiRefreshCw } from \"react-icons/fi\";\r\n\r\nconst ButtonRandom = ({ getQuote }) => {\r\n  return (\r\n    <div className=\"buttonRandom__wrapper\">\r\n      <button className=\"buttonRandom__wrapper__btn\" onClick={() => getQuote()}>\r\n        random\r\n        <FiRefreshCw />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonRandom;\r\n","import React from \"react\";\r\n\r\nconst Quote = ({ quote, autor, genre, authorClickHandler }) => {\r\n  return (\r\n    <div className=\"quote__container\">\r\n      <div className=\"quote__wrapper\">\r\n        <div className=\"quote\">{quote}</div>\r\n      </div>\r\n      <div className=\"info\">\r\n        <button className=\"info__btn\" onClick={() => authorClickHandler()}>\r\n          <div className=\"autor\">{autor}</div>\r\n          <div className=\"genre\">{genre}</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\n\r\nconst AuthorQuotes = ({ autor, arrayAuthorQuote }) => {\r\n  return (\r\n    <div className=\"authorQuotes__wrapper\">\r\n      <div className=\"author\">{autor}</div>\r\n      {arrayAuthorQuote.map((item, i) => {\r\n        return (\r\n          <div className=\"authorQuotes\" key={i}>\r\n            {item}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorQuotes;\r\n","import React, { useState, useEffect } from \"react\";\nimport ButtonRandom from \"./ButtonRandom\";\nimport Quote from \"./Quote\";\nimport AuthorQuotes from \"./AuthorQuotes\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n  const [autor, setAutor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [arrayAuthorQuote, setArrayAuthorQuote] = useState([]);\n  const [isAuthorQuote, setIsAuthorQuote] = useState(false);\n\n  const getQuote = () => {\n    const link = \"https://quote-garden.herokuapp.com/api/v3/quotes\";\n    let randomPage = Math.floor(Math.random() * 6180);\n\n    fetch(`${link}?page=${randomPage}&limit=10`)\n      .then((rep) => rep.json())\n      .then((data) => {\n        let dataQuotes = data.data.length;\n\n        let randomNum = Math.floor(Math.random() * dataQuotes);\n\n        setQuote(data.data[randomNum].quoteText);\n        setAutor(data.data[randomNum].quoteAuthor);\n        setGenre(data.data[randomNum].quoteGenre);\n        setIsAuthorQuote(false);\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  const authorClickHandler = () => {\n    let url = \"https://quote-garden.herokuapp.com/api/v3/quotes\";\n\n    fetch(`${url}?author=${autor}&limit=3`)\n      .then((rep) => rep.json())\n      .then((data) => {\n        const array = data.data;\n        const newArray = [];\n        for (let item of array) {\n          newArray.push(item.quoteText);\n        }\n\n        setArrayAuthorQuote(newArray);\n        setIsAuthorQuote(true);\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  const quoteRender = isAuthorQuote ? (\n    <AuthorQuotes autor={autor} arrayAuthorQuote={arrayAuthorQuote} />\n  ) : (\n    <Quote\n      quote={quote}\n      autor={autor}\n      genre={genre}\n      authorClickHandler={authorClickHandler}\n    />\n  );\n\n  return (\n    <div className=\"App\">\n      <ButtonRandom getQuote={getQuote} />\n      {quoteRender}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}